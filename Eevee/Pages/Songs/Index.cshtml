@page
@model Eevee.Pages.Songs.IndexModel

@{
    ViewData["Title"] = "Index";

}
        

<h1>Index</h1>




<form>
    <p>
        <input type="text" asp-for="SearchString" />
        <input type="submit" value="Search" />
    </p>
</form>

<h4>
    @Model.lv
</h4>

<h4>
    @Model.msg
</h4>
    <div class="box">
        <select>
            <option>Songs</option>
            <option>Artist</option>
            <option>Instruments</option>
            <option>Advertisement</option>
        </select>
<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>

            </th>
            <th>
                @Html.DisplayNameFor(model => model.Song[0].Name)
            </th>
            <th>

            </th>
            <th>
                Artist
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Song[0].Duration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Song[0].Listens)
            </th>
            <th>
                Likes
            </th>
            <th>
                Album
            </th>
            <th>
                Genre
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Song)
        {
        <tr>
            <td>
                <form method="post">
                    <input type="button" runat="server" onclick="@(Html.Raw(String.Format("play('{0}' , '{1}')", Html.Encode(item.Filepath), Html.Encode(item.SongID))))  " value="Play" />
                </form>

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>

                <form method="post">
                    <input type="button" runat="server" onclick="@(Html.Raw(String.Format("like('{0}')", Html.Encode(item.SongID))))  " value="+" />
                </form>

                <form method="post">
                    <input type="button" runat="server" onclick="@(Html.Raw(String.Format("dislike('{0}')",  Html.Encode(item.SongID))))  " value="-" />
                </form>

            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Album.Artist.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Duration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Listens)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Album.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre.Name)
            </td>



            <td>
                @*@<a asp-page="./Edit" asp-route-id="@item.SongID">Edit</a> |*@
                <a asp-page="./Details" asp-route-id="@item.SongID">Details</a> |
                @*<a asp-page="./Delete" asp-route-id="@item.SongID">Delete</a>*@
            </td>
        </tr>
        }
    </tbody>
</table>


<script>
    function play(filepath, id) {
        sessionStorage.setItem("url", filepath);
        sessionStorage.setItem("playSong", 1);
        $.ajax({
            type: "POST",
            url: "/Songs/Index?handler=IncreaseListen",
           headers: {
                RequestVerificationToken:
                    $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            data: {song_id: id}, // passing the parameter
            //contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (retValue) {
                // Do something with the return value from.Net method
                console.log(retValue);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    }
    function like(id) {
        $.ajax({
            type: "POST",
            url: "/Songs/Index?handler=Like",
           headers: {
                RequestVerificationToken:
                    $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            data: {song_id: id}, // passing the parameter
            //contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (retValue) {
                // Do something with the return value from.Net method
                console.log(retValue);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    }
    function dislike(id) {
        $.ajax({
            type: "POST",
            url: "/Songs/Index?handler=Dislike",
           headers: {
                RequestVerificationToken:
                    $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            data: {song_id: id}, // passing the parameter
            //contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (retValue) {
                // Do something with the return value from.Net method
                console.log(retValue);
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    }
</script>
